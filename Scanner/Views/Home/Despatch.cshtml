@model Scanner.Models.OutStandings
@using Scanner.Models
@{
    var user = (User)Session["User"];
    ViewBag.ReturnUrl = "/Home/Despatch";
}
<table class="bodyTable">
    <tr>
        <td style="width:300px; vertical-align:top;">
            <div class="sideMenuDiv">
                @*@Html.Partial("_SideMenuPanel")*@
            </div>
        </td>
        <td style="width:20px;"></td>
        <td style="width:100%" valign="top">
            <div class="jumbotron">
                <table style="width:100%">
                    <tr>
                        <td><font class="subPagetitle">@ViewBag.Title</font></td>
                        <td></td>
                    </tr>
                </table>
            </div>
            <div style="margin-left:10px;">
                <table>
                    <tr>
                        <td><b>Company:</b></td>
                        <td>&nbsp;</td>
                        <td>
                            @Html.TextBoxFor(o => o.Company, new { style = "width:550px;", list = "companyList", onkeyup = "checkEnter(event.keyCode);", tabindex = "1" })
                        <datalist id="companyList" size="3">
                            @foreach (var comp in Model.CompanyList)
                            {
                                <option value="@comp" />
                            }
                        </datalist>
                    </td>
                    <td>&nbsp;</td>
                    <td></td>
                    <td></td>
                </tr>
                <tr>
                    <td><b>Search Text:</b></td>
                    <td>&nbsp;</td>
                    <td>@Html.TextBoxFor(o => o.whereStr, new { style = "width:550px;", onkeyup = "checkEnter(event.keyCode);" })</td>
                    <td>&nbsp;</td>
                    @*<td><input type="button" class="btn btn-primary" onclick="submitNavpage(1)" value="Submit" style="width:80px;" /></td>*@
                    <td><input type="button" class="btn btn-primary" onclick="reloadDespatch()" value="Submit" style="width:80px;" /></td>
                    <td><font color="red">@Html.ValidationMessageFor(o => o.whereStr)</font></td>
                </tr>
            </table>
            <br />
            <div class="TwrapOverFlow">
                <span style="font-weight:bold; color:darkgreen">@Model.Company</span><span style="float:right; font-weight:bold">Total Out Standings : @Model.totalRows.ToString(),&nbsp;&nbsp;&nbsp;Page: @Model.pageNum.ToString()</span>
                <table class="head">
                    <tr>
                        @if (Model.sortCol == "Id")
                        {
                            <td style="width:55px;font-weight:bold;display:none;"><a onclick="orderToggle('Id','Number')">Id<span id="Id_ord" style="float:right;color:green;" class="@Model.orderBy"></span></a></td>
                        }
                        else
                        {
                            <td style="width:55px;font-weight:bold;display:none;"><a onclick="orderToggle('Id','Number')">Id<span id="Id_ord" style="float:right;color:green;display:none;"></span></a></td>
                        }

                        @if (Model.sortCol == "ORDER_NO")
                        {
                            <td style="width:100px;font-weight:bold;"><a onclick="orderToggle('ORDER_NO','Number')">Order No<span id="ORDER_NO_ord" style="float:right;color:green;" class="@Model.orderBy"></span></a></td>
                        }
                        else
                        {
                            <td style="width:100px;font-weight:bold;"><a onclick="orderToggle('ORDER_NO','Number')">Order No<span id="ORDER_NO_ord" style="float:right;color:green;display:none;"></span></a></td>
                        }


                        @if (Model.sortCol == "DESCRIPTION")
                        {
                            <td style="width:100%;font-weight:bold;"><a onclick="orderToggle('DESCRIPTION','String')">Description<span id="DESCRIPTION_ord" style="float:right;color:green;" class="@Model.orderBy"></span></a></td>
                        }
                        else
                        {
                            <td style="width:100%;font-weight:bold;"><a onclick="orderToggle('DESCRIPTION','String')">DESCRIPTION<span id="DESCRIPTION_ord" style="float:right;color:green;display:none;"></span></a></td>
                        }


                        @if (Model.sortCol == "LOAD_NO")
                        {
                            <td style="font-weight:bold;width:100px"><a onclick="orderToggle('LOAD_NO','String')">LOAD NO<span id="LOAD_NO_ord" style="float:right;color:green;" class="@Model.orderBy"></span></a></td>
                        }
                        else
                        {
                            <td style="font-weight:bold;width:100px"><a onclick="orderToggle('LOAD_NO','String')">LOAD NO<span id="LOAD_NO_ord" style="float:right;color:green;display:none;"></span></a></td>
                        }


                        @if (Model.sortCol == "PROD_ORDER")
                        {
                            <td style="width:100px;font-weight:bold;"><a onclick="orderToggle('PROD_ORDER','String')">PROD ORDER<span id="PROD_ORDER_ord" style="float:right;color:green;" class="@Model.orderBy"></span></a></td>
                        }
                        else
                        {
                            <td style="width:100px;font-weight:bold;"><a onclick="orderToggle('PROD_ORDER','String')">PROD ORDER<span id="PROD_ORDER_ord" style="float:right;color:green;display:none;"></span></a></td>
                        }


                        @if (Model.sortCol == "UNIT_WEIGHT")
                        {
                            <td style="width:150px;font-weight:bold;"><a onclick="orderToggle('UNIT_WEIGHT','Number')">UNIT WEIGHT<span id="UNIT_WEIGHT_ord" style="float:right;color:green;" class="@Model.orderBy"></span></a></td>
                        }
                        else
                        {
                            <td style="width:150px;font-weight:bold;"><a onclick="orderToggle('UNIT_WEIGHT','number')">UNIT WEIGHT<span id="UNIT_WEIGHT_ord" style="float:right;color:green;display:none;"></span></a></td>
                        }

                        @if (Model.sortCol == "WEIGHT")
                        {
                            <td style="width:90px;font-weight:bold;"><a onclick="orderToggle('WEIGHT','Number')">WEIGHT<span id="WEIGHT_ord" style="float:right;color:green;" class="@Model.orderBy"></span></a></td>
                        }
                        else
                        {
                            <td style="width:90px;font-weight:bold;"><a onclick="orderToggle('WEIGHT','number')">WEIGHT<span id="WEIGHT_ord" style="float:right;color:green;display:none;"></span></a></td>
                        }

                        @if (Model.sortCol == "QTY")
                        {
                            <td style="width:80px;font-weight:bold;"><a onclick="orderToggle('QTY','Number')">QTY<span id="WEIGHT_ord" style="float:right;color:green;" class="@Model.orderBy"></span></a></td>
                        }
                        else
                        {
                            <td style="width:80px;font-weight:bold;"><a onclick="orderToggle('QTY','number')">QTY<span id="WEIGHT_ord" style="float:right;color:green;display:none;"></span></a></td>
                        }


                        <td style="width:150px;font-weight:bold;">DESPATCH QTY</td>

                    </tr>
                </table>
                <div class="inner_table" style="width:1520px;">
                    @if (Model.errMsg == "")
                    {
                        <table>
                            @for (int i = 0; i < Model.outStandings.Count; i++)
                            {
                                var dLId = "dq" + Model.outStandings[i].Id.ToString();
                                <tr>
                                    <td style="width:55px;display:none;">@Model.outStandings[i].Id.ToString()<input type="hidden" id="@Model.outStandings[i].Id" name="@Model.outStandings[i].Id" value="@Model.outStandings[i].Id" /></td>
                                    <td style="width:100px;">@Model.outStandings[i].ORDER_NO.ToString()</td>
                                    <td style="width:100%;text-align:left;">@Model.outStandings[i].DESCRIPTION</td>
                                    <td style="width:100px">@Model.outStandings[i].LOAD_NO</td>
                                    <td style="width:100px">@Model.outStandings[i].PROD_ORDER</td>
                                    <td style="width:150px">@Model.outStandings[i].UNIT_WEIGHT</td>
                                    <td style="width:90px">@Model.outStandings[i].WEIGHT</td>
                                    <td style="width:80px">@Model.outStandings[i].QTY</td>
                                    <td style="width:150px"><input name="@dLId" id="@dLId" style="height:100%;width:100%" onkeyup="UpdateDespatch('@Model.outStandings[i].Id','@Model.outStandings[i].QTY');" value="@Model.outStandings[i].QTY" /></td>
                                </tr>
                            }
                            <tr>
                                <td colspan="4"></td>
                                <td align="right"><b>TOTAL WEIGHT:</b></td>
                                <td align="center" id="totalWeight">@Convert.ToUInt32(Model.totalWeight).ToString()</td>
                                <td colspan="2" id="despatchWeight" style="font-weight:bold;color:red;text-align:right;"></td>
                            </tr>
                        </table>
                    }
                </div>
                @{
                    var sel15 = (Model.rowsPerPage == 15) ? "selected " : "";
                    var sel30 = (Model.rowsPerPage == 30) ? "selected " : "";
                    var sel50 = (Model.rowsPerPage == 50) ? "selected " : "";
                    var sel100 = (Model.rowsPerPage == 100) ? "selected " : "";
                    var sel150 = (Model.rowsPerPage == 150) ? "selected " : "";
                    var sel200 = (Model.rowsPerPage == 200) ? "selected " : "";

                }
                <br />
                <span style="float:right; font-weight:bold">
                    @Html.TextBoxFor(o => o.totalPages, new { style = "display:none;", Value = Model.totalPages })Total Pages: @Model.totalPages.ToString(), Records per Page:
                    <select name="rowsPerPage" id="rowsPerPage" onchange="reloadDespatch()" style="height:28px;font-size:14px;">
                        <option value=15 @sel15>15</option>
                        <option value=30 @sel30>30</option>
                        <option value=50 @sel50>50</option>
                        <option value=100 @sel100>100</option>
                        <option value=150 @sel150>150</option>
                        <option value=200 @sel200>200</option>
                    </select>
                    &nbsp;&nbsp;
                    <a onclick="backNavpage()"><span class="glyphicon glyphicon-backward"></span></a>&nbsp;
                    @Html.TextBoxFor(o => o.pageNum, new { style = "width:30px;font-size:14px;font-weight:bold;border:solid 1px #666; height:28px;font-color:black;", Value = Model.pageNum, onkeyup = "goNavpage(event.keyCode)" })
                    &nbsp;<a onclick="forwardNavpage()"><span class="glyphicon glyphicon-forward"></span></a>
                </span>
                <input type="hidden" name="rows" id="rowsCnt" value="" />
                <input type="hidden" name="cols" id="colsCnt" value="" />
                @Html.TextBoxFor(o => o.sortCol, new { style = "display:none", Value = Model.sortCol })
                @Html.TextBoxFor(o => o.sortColType, new { style = "display:none", Value = Model.sortColType })
                @Html.TextBoxFor(o => o.orderBy, new { style = "display:none", Value = Model.orderBy })
            </div>
        </div>
    </td>
</tr>
</table>
@if (Model.despatches != null)
{
    for (int i = 0; i < Model.despatches.Count; i++)
    {
        var d = Model.despatches[i];
        var dpId = "dp_" + d.SEQNO.ToString();
        var dpQtyId = "dpQ" + d.SEQNO.ToString();
        var dpUWId = "dpUWId" + d.SEQNO.ToString();
        var dpTWId = "dpTWId" + d.SEQNO.ToString();
        var dpTWId2 = "dpTWId" + i.ToString();
        var subTWeight = d.UNIT_WEIGHT * d.QTY;

        <input type="hidden" name="@dpId" id="@dpId" value="@d.SEQNO" />
        <input type="hidden" name="@dpQtyId" id="@dpQtyId" value="@d.QTY" />
        <input type="hidden" name="@dpUWId" id="@dpUWId" value="@d.UNIT_WEIGHT" />
        <input type="hidden" name="@dpTWId2" id="@dpTWId" value="@subTWeight" />
    }
    <input type="hidden" name="totalRec" id="totalRec" value="@Model.despatches.Count" />
}

<script language="javascript">
    var loadErrMsg = '@Html.Raw(Model.errMsg)';


    if (loadErrMsg != "") {
        BootstrapDialog.show({
            title: '<font style="font-size:30px;font-weight:bold;"><i class="glyphicon glyphicon-warning-sign"></i> Warning</font>',
            message: "<font style='font-size:25px;'>" + loadErrMsg+ "</font>",
            buttons: [{
                label: 'OK',
                cssClass: 'btn-dialog',
                action: function (dialogItself) {
                    dialogItself.close();
                }
            }]
        });
    }

    function UpdateDespatch(id,oqty) {
        var flag = isPosInteger($("#dq" + id).val());
        if (!flag) {
            showWarning("Error: Input is not Positive Integer.");
            $("#dq" + id).val(oqty);
        }
        else {
            if (parseInt($("#dq" + id).val()) > parseInt(oqty)) {
                showWarning("Error: Input is greater than Orignal Qty.");
                $("#dq" + id).val(oqty);
            }
            else {
                $("#dpQ" + id).val($("#dq" + id).val());
                var osubWeight = parseFloat($("#dpTWId" + id).val());
                var subWeight = parseFloat($("#dpQ" + id).val()) * parseFloat($("#dpUWId" + id).val())
                $("#dpTWId" + id).val(subWeight);
                var despatchWeight = 0;
                for (var i = 0; i < parseInt($("#totalRec").val()); i++){
                    despatchWeight += parseFloat($("[name='dpTWId" + i.toString() + "']").val());
                }

                $("#despatchWeight").html("TOTAL DESPATCH WEIGHT: " + Math.round(despatchWeight).toString());
            }
        }
    }

    function showWarning(msg) {
        BootstrapDialog.show({
            //size: BootstrapDialog.SIZE_WIDE,
            title: '<font style="font-size:30px;font-weight:bold;"><i class="glyphicon glyphicon-warning-sign"></i> Warning</font>',
            message: "<font style='font-size:25px;'><div style='max-height:600px;overflow:auto;'>" + msg + "</div></font>",
            buttons: [{
                label: 'OK',
                cssClass: 'btn-dialog',
                action: function (dialogItself) {
                    dialogItself.close();
                }
            }]
        });
    }



    function checkEnter(keyCode) {
        if (keyCode == 13) {
            reloadDespatch();
        }
    }


    function submitNavpage(ini) {
        if (ini == 0) {
            if ($("#pageNum").val().replace(/ /g, "") == "") {
                $("#pageNum").val("1");
            }
        }
        else {
            $("#pageNum").val("1");
        }

        var flag = isPosInteger($("#pageNum").val());
        if (!flag) {
            showWarning("Page Number input is not a valid number.");
            $("#pageNum").val($("#pageNum").val().replace(/\D/g, ''));

            if ($("#pageNum").val() == "0") {
                $("#pageNum").val("1");
            }
        }
        else {
            if (parseInt($("#pageNum").val()) < 1) {
                $("#pageNum").val(1);
            }

            if (parseInt($("#pageNum").val()) > parseInt($("#totalPages").val())) {
                $("#pageNum").val($("#totalPages").val());
            }

            var url = '@Url.Action("-1", "-2")';
            url = url.replace("-1", "Despatch").replace("-2", "Home");
            $("#frmMain").attr('action', url);
            $("#frmMain").submit();
        }
    }

    function goNavpage(keyCode) {
        if (keyCode == 13) {
            submitNavpage(0);
        }
    }

    function forwardNavpage() {
        if ($("#pageNum").val().replace(/ /g, "") == "") {
            $("#pageNum").val("1");
        }

        var flag = isPosInteger($("#pageNum").val());
        if (!flag) {
            showWarning("Page Number input is not a valid number.");
        }
        else {
            if (parseInt($("#pageNum").val()) < 1) {
                $("#pageNum").val(1);
            }

            if (parseInt($("#pageNum").val()) > parseInt($("#totalPages").val())) {
               $("#pageNum").val($("#totalPages").val());
            }

            if (parseInt($("#pageNum").val()) < parseInt($("#totalPages").val())) {
                $("#pageNum").val(parseInt($("#pageNum").val()) + 1);
            }

            var url = '@Url.Action("-1", "-2")';
            url = url.replace("-1", "Despatch").replace("-2", "Home");
            $("#frmMain").attr('action', url);
            $("#frmMain").submit();
        }
    }


    function backNavpage() {
        if ($("#pageNum").val().replace(/ /g, "") == "") {
            $("#pageNum").val("1");
        }

        var flag = isPosInteger($("#pageNum").val());
        if (!flag) {
            showWarning("Page Number input is not a valid number.");
        }
        else {
            if (parseInt($("#pageNum").val()) > parseInt($("#totalPages").val())) {
               $("#pageNum").val($("#totalPages").val());
            }

            if (parseInt($("#pageNum").val()) < 1) {
                $("#pageNum").val(1);
            }

            if (parseInt($("#pageNum").val()) > 1) {
                $("#pageNum").val(parseInt($("#pageNum").val()) - 1);
            }

            var url = '@Url.Action("-1", "-2")';
            url = url.replace("-1", "Despatch").replace("-2", "Home");
            $("#frmMain").attr('action', url);
            $("#frmMain").submit();
        }
    }

    function reloadDespatch() {
        var url = '@Url.Action("-1", "-2")';
        url = url.replace("-1", "Despatch").replace("-2", "Home");
        $("#frmMain").attr('action', url);
        $("#frmMain").submit();
    }

    function orderToggle(Id, sortType) {
        if (Id == $("#sortCol").val()) {
            if ($("#orderBy").val() == "glyphicon glyphicon-arrow-down") {
                $("#orderBy").val("glyphicon glyphicon-arrow-up");
            }
            else {
                $("#orderBy").val("glyphicon glyphicon-arrow-down");
            }
        }
        else {
            $("#sortCol").val(Id);
            $("#orderBy").val("glyphicon glyphicon-arrow-up");
        }

        $("#sortColType").val(sortType);

        var url = '@Url.Action("-1", "-2")';
        url = url.replace("-1", "Despatch").replace("-2", "Home");
        $("#frmMain").attr('action', url);
        $("#frmMain").submit();
    }
</script>