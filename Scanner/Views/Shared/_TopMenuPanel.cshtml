@using System.Web.Configuration;
@{
    var role = "";
    var userName = "";
    var Uid = "";
  //  var allowReturn = "N";
    if (Request.IsAuthenticated)
    {
        if (Session["User"] != null)
        {
            role = ((Scanner.Models.User)Session["User"]).Role;
            userName = ((Scanner.Models.User)Session["User"]).UserName;
            Uid = ((Scanner.Models.User)Session["User"]).Id.ToString();
           // allowReturn = ((Scanner.Models.User)Session["User"]).allowReturn;
        }
    }

    int isFront = 0;
    Session["isFront"] = "0";
    if (Session["TradeType"] != null)
    {
        if (Convert.ToUInt32(Session["TradeType"]) > 0)
        {
            isFront = 1;
            Session["isFront"] = "1";
        }
    }



    var newOrderOrQuote = "NEW ORDER";
    var checkOut = "CHECK OUT";
    var clearMsg = "All current order details will be clear.<br>Are you sure to begin a new order?";
    if (userName == "quotation")
    {
        newOrderOrQuote = "NEW QUOTATION";
        checkOut = "SUBMIT QUOTATION";
        clearMsg = "All current quotations details will be clear.<br>Are you sure to begin a new quotation?";
    }

    string currIP = (Session["IP"] == null) ? "" : Session["IP"].ToString();
}
<nav style="width:inherit">
    <div id="topMenu">
        <ul>
            <li>
                <a onclick="gotoPage('Index', 'Order','');">HOME</a>
            </li>
            <li><a onclick="gotoNewOrder();">@newOrderOrQuote</a></li>
            @if ((isFront == 0) && (userName != "quotation"))
            {
                <li>
                    <a onclick="gotoPage('OrderTrack', 'Order','');">ORDER TRACK</a>
                </li>
                if ((userName.ToLower() == "scottz@gram.com.au") || (userName.ToLower() == "suzis@gram.com.au"))
                {
                    <li>
                        <a onclick="gotoPage('QuotationTrack', 'Order','');">QUOTATION TRACK</a>
                    </li>
                }
            }
            <li>
                @*@Html.ActionLink("CONTACT", "Contact", "Home", new { area = "" }, new { onClick = "setByClick();" })*@
                <a onclick="gotoPage('Contact', 'Home','ini=1');">CONTACT</a>
            </li>
            @*<li>
                    <a onclick="gotoPage('Branches', 'Home','');">BRANCHES</a>
                </li>*@

            @if (userName != "quotation")
            {
                if (role.IndexOf("Gram") > -1)
                {
                    <li>
                        <a onclick="gotoPage('Index', 'Internal','');">INTERNAL</a>
                    </li>
                    <li>
                        @Html.ActionLink("USERS", "Users", "Home", new { area = "" }, new { onClick = "setByClick();" })
                    </li>
                    <li>
                        <a onclick="Exo();"><b>EXO</b></a>
                    </li>
                }
                else
                {
                    <li>
                        @Html.ActionLink("PROFILE", "Registration", "Home", new { id = Uid }, new { onClick = "setByClick();" })
                    </li>
                }

                @*if (allowReturn == "Y")
                    {
                        <li>
                            @Html.ActionLink("RETURNS", "Index", "Return", new { area = "" }, new { onClick = "setByClick();" })
                        </li>
                    }*@
            }
            @if ((Session["CurrForm"] != null) && (Session["CurrForm"].ToString() != "CheckOut"))
            {
                <li>
                    @*@Html.ActionLink("CONTACT", "Contact", "Home", new { area = "" }, new { onClick = "setByClick();" })*@
                    @if (Session["CurrForm"].ToString() != "Confirmation")
                    {
                        <a onclick="gotoPage('CheckOut', 'Order','');">@checkOut</a>
                    }
                    else
                    {
                        <a onclick="goBackToCheckOut()">@checkOut</a>
                    }
                </li>
            }
            else
            {
                <li>
                    <span>@checkOut</span>
                </li>
            }
            <li>@Html.ActionLink("LOGOUT", "Logout", "Home", new { area = "" }, new { onClick = "AreYouSureToLogout()" })</li>
        </ul>
    </div>
</nav>

<input type="hidden" name="isFront" id="isFront" value="@isFront" />
<input type="hidden" name="userRole" id="userRole" value="@role" />
<input type="hidden" name="userName_" id="userName_" value="@userName" />
<input type="hidden" name="userId" id="userId" value="@Uid" />
<input type="hidden" name="currIP" id="currIp" value="@currIP" />
<script language="javascript">

    function AreYouSureToLogout() {
        var msg = "Are you Sure to Logout?<br/>All temperate memory data will lost.";

        BootstrapDialog.show({
            title: '<font style="font-size:30px;font-weight:bold;"><i class="glyphicon glyphicon-question-sign"></i> Confimation</font>',
            message: "<font style='font-size:25px;'>" + msg + "</font>",
            buttons: [{
                label: 'NO',
                cssClass: 'btn-dialog',
                action: function (dialogItself) {
                    dialogItself.close();
                }
            }, {
                label: 'YES',
                cssClass: 'btn-dialog',
                action: function (dialogItself) {
                    dialogItself.close();
                    var url = '@Url.Action("NewOrder", "Order")';
                    location.href = url;
                }
                }]
        });

        setByClick();
    }


	function Exo() {
     var wnd = window.open("exo://saleorder","_blank");
        setTimeout(function() {
          wnd.close();
	    setByClick();
         // window.open('', '_self');
          window.close();
        }, 2000);
    }

    function gotoNewOrder() {
        setByClick();
        var msg = "@Html.Raw(clearMsg)";

        BootstrapDialog.show({
            title: '<font style="font-size:30px;font-weight:bold;"><i class="glyphicon glyphicon-question-sign"></i> Confimation</font>',
            message: "<font style='font-size:25px;'>" + msg + "</font>",
            buttons: [{
                label: 'NO',
                cssClass: 'btn-dialog',
                action: function (dialogItself) {
                    dialogItself.close();
                }
            }, {
                label: 'YES',
                cssClass: 'btn-dialog',
                action: function (dialogItself) {
                    dialogItself.close();
                    var url = '@Url.Action("NewOrder", "Order")';
                    location.href = url;
                }
                }]
        });
        // return confirm("All current order details will be clear. \n  Are you sure to begin a new order?");
    }
</script>




